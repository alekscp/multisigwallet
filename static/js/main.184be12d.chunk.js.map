{"version":3,"sources":["utils.js","App.js","index.js"],"names":["getWeb3","a","window","ethereum","request","method","web3","Web3","currentProvider","App","useState","undefined","setWeb3","accounts","setAccounts","contract","setContract","balance","setBalance","currentTransfer","setCurrentTransfer","quorum","setQuorum","updateBalance","eth","getBalance","options","address","e","preventDefault","amount","target","elements","value","to","methods","createTransfer","send","from","updateCurrentTransfer","sendTransfer","id","nextId","call","currentTransferId","transfers","approvals","alreadyApproved","useEffect","getAccounts","net","getId","networkId","deployedNetwork","MultiSigWallet","networks","console","log","Contract","abi","init","on","className","type","onClick","onSubmit","htmlFor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.184be12d.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = async () => {\n  let web3;\n\n  if (window.ethereum) {\n    await window.ethereum.request({\n      method:  \"eth_requestAccounts\"\n    });\n\n    web3 = new Web3(window.ethereum);\n\n    return web3;\n  } else if (window.web3) {\n    web3 = new Web3(Web3.currentProvider);\n\n    return web3;\n  } else {\n    web3 = new Web3(\"http://localhost:8545\");\n\n    return web3;\n  }\n};\n\nexport { getWeb3 };\n","import React, { useEffect, useState } from 'react';\nimport MultiSigWallet from './contracts/MultiSigWallet.json';\nimport { getWeb3 } from './utils.js';\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [balance, setBalance] = useState(undefined);\n  const [currentTransfer, setCurrentTransfer] = useState(undefined);\n  const [quorum, setQuorum] = useState(undefined);\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = MultiSigWallet.networks[networkId];\n      console.log(deployedNetwork)\n      const contract = new web3.eth.Contract(\n        MultiSigWallet.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const quorum = await contract.methods\n        .quorum()\n        .call();\n\n      setWeb3(web3);\n      setAccounts(accounts);\n      setContract(contract);\n      setQuorum(quorum);\n    }\n\n    init();\n\n    window.ethereum.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n  }, []);\n\n  useEffect(() => {\n    if(typeof contract !== 'undefined' && typeof web3 !== 'undefined') {\n      updateBalance();\n      updateCurrentTransfer();\n    }\n  }, [accounts, contract, web3]);\n\n  async function updateBalance() {\n    const balance = await web3.eth.getBalance(contract.options.address);\n\n    setBalance(balance);\n  }\n\n  async function createTransfer(e) {\n    e.preventDefault();\n\n    const amount = e.target.elements[0].value;\n    const to = e.target.elements[1].value;\n\n    await contract.methods\n      .createTransfer(amount, to)\n      .send({from: accounts[0]});\n\n    await updateCurrentTransfer();\n  };\n\n  async function sendTransfer() {\n    await contract.methods\n      .sendTransfer(currentTransfer.id)\n      .send({from: accounts[0]});\n\n    await updateBalance();\n\n    await updateCurrentTransfer();\n  };\n\n  async function updateCurrentTransfer() {\n    const currentTransferId = (await contract.methods\n      .nextId()\n      .call()) - 1;\n\n    if (currentTransferId >= 0) {\n      const currentTransfer = await contract.methods\n        .transfers(currentTransferId)\n        .call();\n\n      const alreadyApproved = await contract.methods\n        .approvals(accounts[0], currentTransferId)\n        .call();\n\n      setCurrentTransfer({...currentTransfer, alreadyApproved});\n    }\n  }\n\n  if (!web3) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">MultiSigWallet</h1>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n           <p>Balance: <b>{balance}</b> wei </p>\n        </div>\n      </div>\n\n      {!currentTransfer || currentTransfer.approvals === quorum ? ( \n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h2>Create transfer</h2>\n            <form onSubmit={e => createTransfer(e)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"amount\">Amount</label>\n                <input type=\"number\" className=\"form-control\" id=\"amount\" />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"to\">To</label>\n                <input type=\"text\" className=\"form-control\" id=\"to\" />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n          </div>\n        </div>\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h2>Approve transfer</h2>\n            <ul>\n              <li>TransferId: {currentTransfer.id}</li>\n              <li>Amount: {currentTransfer.amount}</li>\n              <li>Approvals: {currentTransfer.approvals}</li>\n            </ul>\n            {currentTransfer.alreadyApproved ? 'Already approved' : (\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary\"\n                onClick={sendTransfer}\n              >Submit</button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}